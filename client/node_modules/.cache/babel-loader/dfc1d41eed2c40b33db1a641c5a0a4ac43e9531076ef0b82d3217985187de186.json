{"ast":null,"code":"var _jsxFileName = \"/home/kishlay/Desktop/QuestSearch/client/src/component/QuestionCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './QuestionCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = ({\n  question\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n  };\n  const getOptionClass = option => {\n    if (selectedOption === option) {\n      return option.iscorrectanswer ? 'selected' : 'incorrect';\n    }\n    return '';\n  };\n  if (question.type === 'MCQ') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlightBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionText\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: question.optionsList && question.optionsList.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleOptionClick(option),\n              className: getOptionClass(option),\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardWrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else if (question.type === 'ANAGRAM') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"highlightBox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionText\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: question.blocksList && question.blocksList.map((block, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: block.text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"highlightBox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionText\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Unknown Question Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(QuestionCard, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionCard","question","_s","selectedOption","setSelectedOption","handleOptionClick","option","getOptionClass","iscorrectanswer","type","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","optionsList","map","index","onClick","text","blocksList","block","_c","$RefreshReg$"],"sources":["/home/kishlay/Desktop/QuestSearch/client/src/component/QuestionCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './QuestionCard.css';\n\nconst QuestionCard = ({ question }) => {\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleOptionClick = (option) => {\n    setSelectedOption(option);\n  };\n\n  const getOptionClass = (option) => {\n    if (selectedOption === option) {\n      return option.iscorrectanswer ? 'selected' : 'incorrect';\n    }\n    return '';\n  };\n\n  if (question.type === 'MCQ') {\n    return (\n      <div className=\"questionContainer\">\n       \n          <div className=\"highlightBox\">\n            <div className=\"questionText\">\n              <h3>{question.title}</h3>\n              <p>{question.type}</p>\n              <ul>\n                {question.optionsList && question.optionsList.map((option, index) => (\n                  <li\n                    key={index}\n                    onClick={() => handleOptionClick(option)}\n                    className={getOptionClass(option)}\n                  >\n                    {option.text}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          \n        </div>\n        <div className=\"cardWrapper\">\n        </div>\n      </div>\n    );\n  } else if (question.type === 'ANAGRAM') {\n    return (\n      <div className=\"questionContainer\">\n        <div className=\"cardWrapper\">\n          <div className=\"highlightBox\">\n            <div className=\"questionText\">\n              <h3>{question.title}</h3>\n              <p>{question.type}</p>\n              <ul>\n                {question.blocksList && question.blocksList.map((block, index) => (\n                  <li key={index}>{block.text}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"questionContainer\">\n        <div className=\"cardWrapper\">\n          <div className=\"highlightBox\">\n            <div className=\"questionText\">\n              <h3>Unknown Question Type</h3>\n              <p>{question.title}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default QuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}