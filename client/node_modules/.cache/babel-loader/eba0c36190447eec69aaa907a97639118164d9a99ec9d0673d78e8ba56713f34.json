{"ast":null,"code":"var _jsxFileName = \"/home/kishlay/Desktop/QuestSearch/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getQuestions } from './grpcClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchQuestions = () => {\n    getQuestions(title, type, (err, response) => {\n      if (err) {\n        console.error('Error fetching questions:', err);\n        setError(err.message);\n        setQuestions([]);\n      } else {\n        console.log('Response from getQuestions:', response);\n        if (response && response.questionsList) {\n          setError(null);\n          setQuestions(response.questionsList);\n        } else {\n          setError('Invalid response format');\n          setQuestions([]);\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Enter title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"Enter type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuestions,\n      children: \"Fetch Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0pG6HpVgQ3QA2X3WFucXOZqPRlA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","getQuestions","jsxDEV","_jsxDEV","App","_s","title","setTitle","type","setType","questions","setQuestions","error","setError","fetchQuestions","err","response","console","message","log","questionsList","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","question","index","_c","$RefreshReg$"],"sources":["/home/kishlay/Desktop/QuestSearch/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getQuestions } from './grpcClient';\n\nconst App = () => {\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchQuestions = () => {\n    getQuestions(title, type, (err, response) => {\n      if (err) {\n        console.error('Error fetching questions:', err);\n        setError(err.message);\n        setQuestions([]);\n      } else {\n        console.log('Response from getQuestions:', response);\n        if (response && response.questionsList) {\n          setError(null);\n          setQuestions(response.questionsList);\n        } else {\n          setError('Invalid response format');\n          setQuestions([]);\n        }\n      }\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Enter title\"\n      />\n      <input\n        type=\"text\"\n        value={type}\n        onChange={(e) => setType(e.target.value)}\n        placeholder=\"Enter type\"\n      />\n      <button onClick={fetchQuestions}>Fetch Questions</button>\n      {error && <p>Error: {error}</p>}\n      <ul>\n        {questions.map((question, index) => (\n          <li key={index}>{question.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}