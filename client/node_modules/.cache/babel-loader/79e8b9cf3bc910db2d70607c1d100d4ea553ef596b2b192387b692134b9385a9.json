{"ast":null,"code":"var _jsxFileName = \"/home/kishlay/Desktop/QuestSearch/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getQuestions } from './grpcClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const pageSize = 10;\n  const fetchQuestions = async () => {\n    try {\n      getQuestions(title, type, (err, response) => {\n        if (err) {\n          setError(err.message);\n        } else {\n          setQuestions(response.questionsList);\n          setError(null);\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchQuestions();\n  }, [page]);\n  const handleNextPage = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  const handlePreviousPage = () => {\n    setPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  const handlePageClick = pageNumber => {\n    setPage(pageNumber);\n  };\n  const totalPages = Math.ceil(questions.length / pageSize);\n  const paginatedQuestions = questions.slice((page - 1) * pageSize, page * pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Enter title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"Enter type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuestions,\n      children: \"Fetch Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: paginatedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: page === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageClick(index + 1),\n        disabled: page === index + 1,\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: page === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TmDmrN50y2JACAGR4f7rdwMOLes=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getQuestions","jsxDEV","_jsxDEV","App","_s","title","setTitle","type","setType","questions","setQuestions","error","setError","page","setPage","pageSize","fetchQuestions","err","response","message","questionsList","handleNextPage","prevPage","handlePreviousPage","Math","max","handlePageClick","pageNumber","totalPages","ceil","length","paginatedQuestions","slice","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","question","index","disabled","Array","_","_c","$RefreshReg$"],"sources":["/home/kishlay/Desktop/QuestSearch/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getQuestions } from './grpcClient';\n\nconst App = () => {\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const pageSize = 10;\n\n  const fetchQuestions = async () => {\n    try {\n      getQuestions(title, type, (err, response) => {\n        if (err) {\n          setError(err.message);\n        } else {\n          setQuestions(response.questionsList);\n          setError(null);\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuestions();\n  }, [page]);\n\n  const handleNextPage = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const handlePreviousPage = () => {\n    setPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n\n  const handlePageClick = (pageNumber) => {\n    setPage(pageNumber);\n  };\n\n  const totalPages = Math.ceil(questions.length / pageSize);\n  const paginatedQuestions = questions.slice((page - 1) * pageSize, page * pageSize);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Enter title\"\n      />\n      <input\n        type=\"text\"\n        value={type}\n        onChange={(e) => setType(e.target.value)}\n        placeholder=\"Enter type\"\n      />\n      <button onClick={fetchQuestions}>Fetch Questions</button>\n      {error && <p>Error: {error}</p>}\n      <ul>\n        {paginatedQuestions.map((question, index) => (\n          <li key={index}>{question.title}</li>\n        ))}\n      </ul>\n      <div>\n        <button onClick={handlePreviousPage} disabled={page === 1}>Previous</button>\n        {[...Array(totalPages)].map((_, index) => (\n          <button\n            key={index}\n            onClick={() => handlePageClick(index + 1)}\n            disabled={page === index + 1}\n          >\n            {index + 1}\n          </button>\n        ))}\n        <button onClick={handleNextPage} disabled={page === totalPages}>Next</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMiB,QAAQ,GAAG,EAAE;EAEnB,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFhB,YAAY,CAACK,KAAK,EAAEE,IAAI,EAAE,CAACU,GAAG,EAAEC,QAAQ,KAAK;QAC3C,IAAID,GAAG,EAAE;UACPL,QAAQ,CAACK,GAAG,CAACE,OAAO,CAAC;QACvB,CAAC,MAAM;UACLT,YAAY,CAACQ,QAAQ,CAACE,aAAa,CAAC;UACpCR,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZL,QAAQ,CAACK,GAAG,CAACE,OAAO,CAAC;IACvB;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3BP,OAAO,CAAEQ,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BT,OAAO,CAAEQ,QAAQ,IAAKE,IAAI,CAACC,GAAG,CAACH,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMI,eAAe,GAAIC,UAAU,IAAK;IACtCb,OAAO,CAACa,UAAU,CAAC;EACrB,CAAC;EAED,MAAMC,UAAU,GAAGJ,IAAI,CAACK,IAAI,CAACpB,SAAS,CAACqB,MAAM,GAAGf,QAAQ,CAAC;EACzD,MAAMgB,kBAAkB,GAAGtB,SAAS,CAACuB,KAAK,CAAC,CAACnB,IAAI,GAAG,CAAC,IAAIE,QAAQ,EAAEF,IAAI,GAAGE,QAAQ,CAAC;EAElF,oBACEb,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MACEK,IAAI,EAAC,MAAM;MACX2B,KAAK,EAAE7B,KAAM;MACb8B,QAAQ,EAAGC,CAAC,IAAK9B,QAAQ,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFxC,OAAA;MACEK,IAAI,EAAC,MAAM;MACX2B,KAAK,EAAE3B,IAAK;MACZ4B,QAAQ,EAAGC,CAAC,IAAK5B,OAAO,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFxC,OAAA;MAAQyC,OAAO,EAAE3B,cAAe;MAAAiB,QAAA,EAAC;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxD/B,KAAK,iBAAIT,OAAA;MAAA+B,QAAA,GAAG,SAAO,EAACtB,KAAK;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BxC,OAAA;MAAA+B,QAAA,EACGF,kBAAkB,CAACa,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACtC5C,OAAA;QAAA+B,QAAA,EAAiBY,QAAQ,CAACxC;MAAK,GAAtByC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLxC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAQyC,OAAO,EAAEpB,kBAAmB;QAACwB,QAAQ,EAAElC,IAAI,KAAK,CAAE;QAAAoB,QAAA,EAAC;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3E,CAAC,GAAGM,KAAK,CAACpB,UAAU,CAAC,CAAC,CAACgB,GAAG,CAAC,CAACK,CAAC,EAAEH,KAAK,kBACnC5C,OAAA;QAEEyC,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACoB,KAAK,GAAG,CAAC,CAAE;QAC1CC,QAAQ,EAAElC,IAAI,KAAKiC,KAAK,GAAG,CAAE;QAAAb,QAAA,EAE5Ba,KAAK,GAAG;MAAC,GAJLA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT,CAAC,eACFxC,OAAA;QAAQyC,OAAO,EAAEtB,cAAe;QAAC0B,QAAQ,EAAElC,IAAI,KAAKe,UAAW;QAAAK,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CA9EID,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAgFT,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}