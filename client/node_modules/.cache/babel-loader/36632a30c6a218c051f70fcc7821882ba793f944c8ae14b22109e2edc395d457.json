{"ast":null,"code":"var _jsxFileName = \"/home/kishlay/Desktop/QuestSearch/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getQuestions } from './grpcClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchQuestions = async () => {\n    try {\n      const response = await getQuestions(title, type);\n      console.log('Response from getQuestions:', response);\n      if (response && response.questionsList) {\n        setError(null);\n        setQuestions(response.questionsList);\n      } else {\n        setError('Invalid response format');\n        setQuestions([]);\n      }\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n      setError(err.message);\n      setQuestions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Enter title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"Enter type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuestions,\n      children: \"Fetch Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0pG6HpVgQ3QA2X3WFucXOZqPRlA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","getQuestions","jsxDEV","_jsxDEV","App","_s","title","setTitle","type","setType","questions","setQuestions","error","setError","fetchQuestions","response","console","log","questionsList","err","message","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","question","index","_c","$RefreshReg$"],"sources":["/home/kishlay/Desktop/QuestSearch/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getQuestions } from './grpcClient';\n\nconst App = () => {\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchQuestions = async () => {\n    try {\n      const response = await getQuestions(title, type);\n      console.log('Response from getQuestions:', response);\n      if (response && response.questionsList) {\n        setError(null);\n        setQuestions(response.questionsList);\n      } else {\n        setError('Invalid response format');\n        setQuestions([]);\n      }\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n      setError(err.message);\n      setQuestions([]);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Enter title\"\n      />\n      <input\n        type=\"text\"\n        value={type}\n        onChange={(e) => setType(e.target.value)}\n        placeholder=\"Enter type\"\n      />\n      <button onClick={fetchQuestions}>Fetch Questions</button>\n      {error && <div>Error: {error}</div>}\n      <ul>\n        {questions.map((question, index) => (\n          <li key={index}>{question}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}