{"ast":null,"code":"import { promisify } from 'util';\nimport { QuestionServiceClient } from './questionpb/questions_grpc_web_pb';\nimport { QuestionsRequest } from './questionpb/questions_pb';\n\n// Create a gRPC client instance\nconst client = new QuestionServiceClient(\"http://localhost:8080\");\n\n// Promisify the getQuestions method\nconst getQuestionsAsync = promisify(client.getQuestions).bind(client);\n\n// Function to fetch questions by title and type using async/await\nexport async function getQuestions(title, type) {\n  const request = new QuestionsRequest();\n  request.setTitle(title);\n  request.setType(type);\n  try {\n    const response = await getQuestionsAsync(request, {});\n    console.log(\"Questions:\", JSON.stringify(response.toObject(), null, 2));\n    return response.toObject();\n  } catch (error) {\n    console.error(\"Error in GetQuestions:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["promisify","QuestionServiceClient","QuestionsRequest","client","getQuestionsAsync","getQuestions","bind","title","type","request","setTitle","setType","response","console","log","JSON","stringify","toObject","error"],"sources":["/home/kishlay/Desktop/QuestSearch/client/src/grpcClient.js"],"sourcesContent":["import { promisify } from 'util';\nimport { QuestionServiceClient } from './questionpb/questions_grpc_web_pb';\nimport { QuestionsRequest } from './questionpb/questions_pb';\n\n// Create a gRPC client instance\nconst client = new QuestionServiceClient(\"http://localhost:8080\");\n\n// Promisify the getQuestions method\nconst getQuestionsAsync = promisify(client.getQuestions).bind(client);\n\n// Function to fetch questions by title and type using async/await\nexport async function getQuestions(title, type) {\n  const request = new QuestionsRequest();\n  request.setTitle(title);\n  request.setType(type);\n\n  try {\n    const response = await getQuestionsAsync(request, {});\n    console.log(\"Questions:\", JSON.stringify(response.toObject(), null, 2));\n    return response.toObject();\n  } catch (error) {\n    console.error(\"Error in GetQuestions:\", error);\n    throw error;\n  }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,MAAM;AAChC,SAASC,qBAAqB,QAAQ,oCAAoC;AAC1E,SAASC,gBAAgB,QAAQ,2BAA2B;;AAE5D;AACA,MAAMC,MAAM,GAAG,IAAIF,qBAAqB,CAAC,uBAAuB,CAAC;;AAEjE;AACA,MAAMG,iBAAiB,GAAGJ,SAAS,CAACG,MAAM,CAACE,YAAY,CAAC,CAACC,IAAI,CAACH,MAAM,CAAC;;AAErE;AACA,OAAO,eAAeE,YAAYA,CAACE,KAAK,EAAEC,IAAI,EAAE;EAC9C,MAAMC,OAAO,GAAG,IAAIP,gBAAgB,CAAC,CAAC;EACtCO,OAAO,CAACC,QAAQ,CAACH,KAAK,CAAC;EACvBE,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC;EAErB,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMR,iBAAiB,CAACK,OAAO,EAAE,CAAC,CAAC,CAAC;IACrDI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACvE,OAAOL,QAAQ,CAACK,QAAQ,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}