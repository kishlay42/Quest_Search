{"ast":null,"code":"// source: questions.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = function () {\n  return this || window || global || self || Function('return this')();\n}.call(null);\ngoog.exportSymbol('proto.questions.Block', null, global);\ngoog.exportSymbol('proto.questions.Option', null, global);\ngoog.exportSymbol('proto.questions.Question', null, global);\ngoog.exportSymbol('proto.questions.QuestionsRequest', null, global);\ngoog.exportSymbol('proto.questions.QuestionsResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.QuestionsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.questions.QuestionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.QuestionsRequest.displayName = 'proto.questions.QuestionsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.Question = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.questions.Question.repeatedFields_, null);\n};\ngoog.inherits(proto.questions.Question, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.Question.displayName = 'proto.questions.Question';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.Block = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.questions.Block, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.Block.displayName = 'proto.questions.Block';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.Option = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.questions.Option, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.Option.displayName = 'proto.questions.Option';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.QuestionsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.questions.QuestionsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.questions.QuestionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.QuestionsResponse.displayName = 'proto.questions.QuestionsResponse';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.questions.QuestionsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.questions.QuestionsRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.questions.QuestionsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.questions.QuestionsRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        title: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        type: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.QuestionsRequest}\n */\nproto.questions.QuestionsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.QuestionsRequest();\n  return proto.questions.QuestionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.QuestionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.QuestionsRequest}\n */\nproto.questions.QuestionsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setTitle(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setType(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.QuestionsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.QuestionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.QuestionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.QuestionsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.questions.QuestionsRequest.prototype.getTitle = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.QuestionsRequest} returns this\n */\nproto.questions.QuestionsRequest.prototype.setTitle = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string type = 2;\n * @return {string}\n */\nproto.questions.QuestionsRequest.prototype.getType = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.QuestionsRequest} returns this\n */\nproto.questions.QuestionsRequest.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.questions.Question.repeatedFields_ = [4, 5];\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.questions.Question.prototype.toObject = function (opt_includeInstance) {\n    return proto.questions.Question.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.questions.Question} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.questions.Question.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        type: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        anagramtype: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        blocksList: jspb.Message.toObjectList(msg.getBlocksList(), proto.questions.Block.toObject, includeInstance),\n        optionsList: jspb.Message.toObjectList(msg.getOptionsList(), proto.questions.Option.toObject, includeInstance),\n        siblingid: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n        solution: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n        title: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.Question}\n */\nproto.questions.Question.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.Question();\n  return proto.questions.Question.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.Question} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.Question}\n */\nproto.questions.Question.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setId(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setType(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setAnagramtype(value);\n        break;\n      case 4:\n        var value = new proto.questions.Block();\n        reader.readMessage(value, proto.questions.Block.deserializeBinaryFromReader);\n        msg.addBlocks(value);\n        break;\n      case 5:\n        var value = new proto.questions.Option();\n        reader.readMessage(value, proto.questions.Option.deserializeBinaryFromReader);\n        msg.addOptions(value);\n        break;\n      case 6:\n        var value = /** @type {string} */reader.readString();\n        msg.setSiblingid(value);\n        break;\n      case 7:\n        var value = /** @type {string} */reader.readString();\n        msg.setSolution(value);\n        break;\n      case 8:\n        var value = /** @type {string} */reader.readString();\n        msg.setTitle(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.Question.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.Question.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.Question} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Question.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getAnagramtype();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getBlocksList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(4, f, proto.questions.Block.serializeBinaryToWriter);\n  }\n  f = message.getOptionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(5, f, proto.questions.Option.serializeBinaryToWriter);\n  }\n  f = message.getSiblingid();\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n  f = message.getSolution();\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n};\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.questions.Question.prototype.getId = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string type = 2;\n * @return {string}\n */\nproto.questions.Question.prototype.getType = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string anagramType = 3;\n * @return {string}\n */\nproto.questions.Question.prototype.getAnagramtype = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setAnagramtype = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * repeated Block blocks = 4;\n * @return {!Array<!proto.questions.Block>}\n */\nproto.questions.Question.prototype.getBlocksList = function () {\n  return /** @type{!Array<!proto.questions.Block>} */jspb.Message.getRepeatedWrapperField(this, proto.questions.Block, 4);\n};\n\n/**\n * @param {!Array<!proto.questions.Block>} value\n * @return {!proto.questions.Question} returns this\n*/\nproto.questions.Question.prototype.setBlocksList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n/**\n * @param {!proto.questions.Block=} opt_value\n * @param {number=} opt_index\n * @return {!proto.questions.Block}\n */\nproto.questions.Question.prototype.addBlocks = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.questions.Block, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.clearBlocksList = function () {\n  return this.setBlocksList([]);\n};\n\n/**\n * repeated Option options = 5;\n * @return {!Array<!proto.questions.Option>}\n */\nproto.questions.Question.prototype.getOptionsList = function () {\n  return /** @type{!Array<!proto.questions.Option>} */jspb.Message.getRepeatedWrapperField(this, proto.questions.Option, 5);\n};\n\n/**\n * @param {!Array<!proto.questions.Option>} value\n * @return {!proto.questions.Question} returns this\n*/\nproto.questions.Question.prototype.setOptionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n/**\n * @param {!proto.questions.Option=} opt_value\n * @param {number=} opt_index\n * @return {!proto.questions.Option}\n */\nproto.questions.Question.prototype.addOptions = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.questions.Option, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.clearOptionsList = function () {\n  return this.setOptionsList([]);\n};\n\n/**\n * optional string siblingId = 6;\n * @return {string}\n */\nproto.questions.Question.prototype.getSiblingid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setSiblingid = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n/**\n * optional string solution = 7;\n * @return {string}\n */\nproto.questions.Question.prototype.getSolution = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 7, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setSolution = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n/**\n * optional string title = 8;\n * @return {string}\n */\nproto.questions.Question.prototype.getTitle = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 8, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setTitle = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.questions.Block.prototype.toObject = function (opt_includeInstance) {\n    return proto.questions.Block.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.questions.Block} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.questions.Block.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        text: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        showinoption: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n        isanswer: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.Block}\n */\nproto.questions.Block.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.Block();\n  return proto.questions.Block.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.Block} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.Block}\n */\nproto.questions.Block.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setText(value);\n        break;\n      case 2:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setShowinoption(value);\n        break;\n      case 3:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setIsanswer(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.Block.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.Block.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.Block} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Block.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getShowinoption();\n  if (f) {\n    writer.writeBool(2, f);\n  }\n  f = message.getIsanswer();\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n\n/**\n * optional string text = 1;\n * @return {string}\n */\nproto.questions.Block.prototype.getText = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Block} returns this\n */\nproto.questions.Block.prototype.setText = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional bool showInOption = 2;\n * @return {boolean}\n */\nproto.questions.Block.prototype.getShowinoption = function () {\n  return /** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.questions.Block} returns this\n */\nproto.questions.Block.prototype.setShowinoption = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n/**\n * optional bool isAnswer = 3;\n * @return {boolean}\n */\nproto.questions.Block.prototype.getIsanswer = function () {\n  return /** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.questions.Block} returns this\n */\nproto.questions.Block.prototype.setIsanswer = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.questions.Option.prototype.toObject = function (opt_includeInstance) {\n    return proto.questions.Option.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.questions.Option} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.questions.Option.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        text: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        iscorrectanswer: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.Option}\n */\nproto.questions.Option.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.Option();\n  return proto.questions.Option.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.Option} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.Option}\n */\nproto.questions.Option.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setText(value);\n        break;\n      case 2:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setIscorrectanswer(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.Option.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.Option.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.Option} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Option.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getIscorrectanswer();\n  if (f) {\n    writer.writeBool(2, f);\n  }\n};\n\n/**\n * optional string text = 1;\n * @return {string}\n */\nproto.questions.Option.prototype.getText = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.questions.Option} returns this\n */\nproto.questions.Option.prototype.setText = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional bool isCorrectAnswer = 2;\n * @return {boolean}\n */\nproto.questions.Option.prototype.getIscorrectanswer = function () {\n  return /** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.questions.Option} returns this\n */\nproto.questions.Option.prototype.setIscorrectanswer = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.questions.QuestionsResponse.repeatedFields_ = [1];\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.questions.QuestionsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.questions.QuestionsResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.questions.QuestionsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.questions.QuestionsResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        questionsList: jspb.Message.toObjectList(msg.getQuestionsList(), proto.questions.Question.toObject, includeInstance)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.QuestionsResponse}\n */\nproto.questions.QuestionsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.QuestionsResponse();\n  return proto.questions.QuestionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.QuestionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.QuestionsResponse}\n */\nproto.questions.QuestionsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.questions.Question();\n        reader.readMessage(value, proto.questions.Question.deserializeBinaryFromReader);\n        msg.addQuestions(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.QuestionsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.QuestionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.QuestionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.QuestionsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getQuestionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.questions.Question.serializeBinaryToWriter);\n  }\n};\n\n/**\n * repeated Question questions = 1;\n * @return {!Array<!proto.questions.Question>}\n */\nproto.questions.QuestionsResponse.prototype.getQuestionsList = function () {\n  return /** @type{!Array<!proto.questions.Question>} */jspb.Message.getRepeatedWrapperField(this, proto.questions.Question, 1);\n};\n\n/**\n * @param {!Array<!proto.questions.Question>} value\n * @return {!proto.questions.QuestionsResponse} returns this\n*/\nproto.questions.QuestionsResponse.prototype.setQuestionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n/**\n * @param {!proto.questions.Question=} opt_value\n * @param {number=} opt_index\n * @return {!proto.questions.Question}\n */\nproto.questions.QuestionsResponse.prototype.addQuestions = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.questions.Question, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.questions.QuestionsResponse} returns this\n */\nproto.questions.QuestionsResponse.prototype.clearQuestionsList = function () {\n  return this.setQuestionsList([]);\n};\ngoog.object.extend(exports, proto.questions);","map":{"version":3,"names":["jspb","require","goog","global","window","self","Function","call","exportSymbol","proto","questions","QuestionsRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Question","repeatedFields_","Block","Option","QuestionsResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","title","getFieldWithDefault","type","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setTitle","setType","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getTitle","length","writeString","getType","setProto3StringField","id","anagramtype","blocksList","toObjectList","getBlocksList","optionsList","getOptionsList","siblingid","solution","setId","setAnagramtype","readMessage","addBlocks","addOptions","setSiblingid","setSolution","getId","getAnagramtype","writeRepeatedMessage","getSiblingid","getSolution","getRepeatedWrapperField","setBlocksList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearBlocksList","setOptionsList","clearOptionsList","text","showinoption","getBooleanFieldWithDefault","isanswer","setText","readBool","setShowinoption","setIsanswer","getText","getShowinoption","writeBool","getIsanswer","setProto3BooleanField","iscorrectanswer","setIscorrectanswer","getIscorrectanswer","questionsList","getQuestionsList","addQuestions","setQuestionsList","clearQuestionsList","object","extend","exports"],"sources":["/home/kishlay/Desktop/QuestSearch/client/src/questionpb/questions_pb.js"],"sourcesContent":["// source: questions.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.questions.Block', null, global);\ngoog.exportSymbol('proto.questions.Option', null, global);\ngoog.exportSymbol('proto.questions.Question', null, global);\ngoog.exportSymbol('proto.questions.QuestionsRequest', null, global);\ngoog.exportSymbol('proto.questions.QuestionsResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.QuestionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.questions.QuestionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.QuestionsRequest.displayName = 'proto.questions.QuestionsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.Question = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.questions.Question.repeatedFields_, null);\n};\ngoog.inherits(proto.questions.Question, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.Question.displayName = 'proto.questions.Question';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.Block = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.questions.Block, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.Block.displayName = 'proto.questions.Block';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.Option = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.questions.Option, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.Option.displayName = 'proto.questions.Option';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.questions.QuestionsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.questions.QuestionsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.questions.QuestionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.questions.QuestionsResponse.displayName = 'proto.questions.QuestionsResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.questions.QuestionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.questions.QuestionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.questions.QuestionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.QuestionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.QuestionsRequest}\n */\nproto.questions.QuestionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.QuestionsRequest;\n  return proto.questions.QuestionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.QuestionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.QuestionsRequest}\n */\nproto.questions.QuestionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.QuestionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.QuestionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.QuestionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.QuestionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.questions.QuestionsRequest.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.QuestionsRequest} returns this\n */\nproto.questions.QuestionsRequest.prototype.setTitle = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string type = 2;\n * @return {string}\n */\nproto.questions.QuestionsRequest.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.QuestionsRequest} returns this\n */\nproto.questions.QuestionsRequest.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.questions.Question.repeatedFields_ = [4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.questions.Question.prototype.toObject = function(opt_includeInstance) {\n  return proto.questions.Question.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.questions.Question} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Question.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    anagramtype: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    blocksList: jspb.Message.toObjectList(msg.getBlocksList(),\n    proto.questions.Block.toObject, includeInstance),\n    optionsList: jspb.Message.toObjectList(msg.getOptionsList(),\n    proto.questions.Option.toObject, includeInstance),\n    siblingid: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    solution: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    title: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.Question}\n */\nproto.questions.Question.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.Question;\n  return proto.questions.Question.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.Question} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.Question}\n */\nproto.questions.Question.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAnagramtype(value);\n      break;\n    case 4:\n      var value = new proto.questions.Block;\n      reader.readMessage(value,proto.questions.Block.deserializeBinaryFromReader);\n      msg.addBlocks(value);\n      break;\n    case 5:\n      var value = new proto.questions.Option;\n      reader.readMessage(value,proto.questions.Option.deserializeBinaryFromReader);\n      msg.addOptions(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSiblingid(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSolution(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.Question.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.Question.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.Question} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Question.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAnagramtype();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBlocksList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.questions.Block.serializeBinaryToWriter\n    );\n  }\n  f = message.getOptionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.questions.Option.serializeBinaryToWriter\n    );\n  }\n  f = message.getSiblingid();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getSolution();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.questions.Question.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string type = 2;\n * @return {string}\n */\nproto.questions.Question.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string anagramType = 3;\n * @return {string}\n */\nproto.questions.Question.prototype.getAnagramtype = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setAnagramtype = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated Block blocks = 4;\n * @return {!Array<!proto.questions.Block>}\n */\nproto.questions.Question.prototype.getBlocksList = function() {\n  return /** @type{!Array<!proto.questions.Block>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.questions.Block, 4));\n};\n\n\n/**\n * @param {!Array<!proto.questions.Block>} value\n * @return {!proto.questions.Question} returns this\n*/\nproto.questions.Question.prototype.setBlocksList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.questions.Block=} opt_value\n * @param {number=} opt_index\n * @return {!proto.questions.Block}\n */\nproto.questions.Question.prototype.addBlocks = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.questions.Block, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.clearBlocksList = function() {\n  return this.setBlocksList([]);\n};\n\n\n/**\n * repeated Option options = 5;\n * @return {!Array<!proto.questions.Option>}\n */\nproto.questions.Question.prototype.getOptionsList = function() {\n  return /** @type{!Array<!proto.questions.Option>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.questions.Option, 5));\n};\n\n\n/**\n * @param {!Array<!proto.questions.Option>} value\n * @return {!proto.questions.Question} returns this\n*/\nproto.questions.Question.prototype.setOptionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.questions.Option=} opt_value\n * @param {number=} opt_index\n * @return {!proto.questions.Option}\n */\nproto.questions.Question.prototype.addOptions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.questions.Option, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.clearOptionsList = function() {\n  return this.setOptionsList([]);\n};\n\n\n/**\n * optional string siblingId = 6;\n * @return {string}\n */\nproto.questions.Question.prototype.getSiblingid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setSiblingid = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string solution = 7;\n * @return {string}\n */\nproto.questions.Question.prototype.getSolution = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setSolution = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string title = 8;\n * @return {string}\n */\nproto.questions.Question.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Question} returns this\n */\nproto.questions.Question.prototype.setTitle = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.questions.Block.prototype.toObject = function(opt_includeInstance) {\n  return proto.questions.Block.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.questions.Block} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Block.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    text: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    showinoption: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    isanswer: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.Block}\n */\nproto.questions.Block.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.Block;\n  return proto.questions.Block.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.Block} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.Block}\n */\nproto.questions.Block.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowinoption(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsanswer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.Block.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.Block.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.Block} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Block.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getShowinoption();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getIsanswer();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string text = 1;\n * @return {string}\n */\nproto.questions.Block.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Block} returns this\n */\nproto.questions.Block.prototype.setText = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool showInOption = 2;\n * @return {boolean}\n */\nproto.questions.Block.prototype.getShowinoption = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.questions.Block} returns this\n */\nproto.questions.Block.prototype.setShowinoption = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional bool isAnswer = 3;\n * @return {boolean}\n */\nproto.questions.Block.prototype.getIsanswer = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.questions.Block} returns this\n */\nproto.questions.Block.prototype.setIsanswer = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.questions.Option.prototype.toObject = function(opt_includeInstance) {\n  return proto.questions.Option.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.questions.Option} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Option.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    text: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    iscorrectanswer: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.Option}\n */\nproto.questions.Option.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.Option;\n  return proto.questions.Option.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.Option} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.Option}\n */\nproto.questions.Option.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIscorrectanswer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.Option.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.Option.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.Option} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.Option.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIscorrectanswer();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string text = 1;\n * @return {string}\n */\nproto.questions.Option.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.questions.Option} returns this\n */\nproto.questions.Option.prototype.setText = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool isCorrectAnswer = 2;\n * @return {boolean}\n */\nproto.questions.Option.prototype.getIscorrectanswer = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.questions.Option} returns this\n */\nproto.questions.Option.prototype.setIscorrectanswer = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.questions.QuestionsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.questions.QuestionsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.questions.QuestionsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.questions.QuestionsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.QuestionsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),\n    proto.questions.Question.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.questions.QuestionsResponse}\n */\nproto.questions.QuestionsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.questions.QuestionsResponse;\n  return proto.questions.QuestionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.questions.QuestionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.questions.QuestionsResponse}\n */\nproto.questions.QuestionsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.questions.Question;\n      reader.readMessage(value,proto.questions.Question.deserializeBinaryFromReader);\n      msg.addQuestions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.questions.QuestionsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.questions.QuestionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.questions.QuestionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.questions.QuestionsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getQuestionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.questions.Question.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Question questions = 1;\n * @return {!Array<!proto.questions.Question>}\n */\nproto.questions.QuestionsResponse.prototype.getQuestionsList = function() {\n  return /** @type{!Array<!proto.questions.Question>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.questions.Question, 1));\n};\n\n\n/**\n * @param {!Array<!proto.questions.Question>} value\n * @return {!proto.questions.QuestionsResponse} returns this\n*/\nproto.questions.QuestionsResponse.prototype.setQuestionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.questions.Question=} opt_value\n * @param {number=} opt_index\n * @return {!proto.questions.Question}\n */\nproto.questions.QuestionsResponse.prototype.addQuestions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.questions.Question, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.questions.QuestionsResponse} returns this\n */\nproto.questions.QuestionsResponse.prototype.clearQuestionsList = function() {\n  return this.setQuestionsList([]);\n};\n\n\ngoog.object.extend(exports, proto.questions);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}